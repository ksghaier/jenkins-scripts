pipeline {
    agent any

    options {
        disableConcurrentBuilds()
        quietPeriod 600
    }

    triggers{ pollSCM('H/15 * * * *') }

    parameters {
        string(
            name: 'SSTATE_DIR',
            description: 'Sstate cache directory'
        )
        string(
            name: 'DL_DIR',
            description: 'Download directory'
        )
    }

    stages {
        stage('Build-helpers') {
            steps {
                checkout(
                    changelog: true,
                    poll: true,
                    scm: [
                        $class: 'GitSCM',
                        branches: [[name: 'main']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [
                            [ $class: 'CleanCheckout'],
                            [ $class: 'SubmoduleOption',
                                disableSubmodules: false,
                                parentCredentials: false,
                                recursiveSubmodules: true,
                                reference: '',
                                trackingSubmodules: false
                            ],
                            [ $class: 'RelativeTargetDirectory',
                                relativeTargetDir: 'helpers'
                            ],
                            [ $class: 'CheckoutOption',
                                timeout: 30
                            ],
                            [ $class: 'CloneOption',
                                depth: 0,
                                noTags: false,
                                reference: '',
                                shallow: false,
                                timeout: 45,
                            ]
                        ],
                        submoduleCfg: [],
                        userRemoteConfigs: [
                            [url: 'https://github.com/xroumegue/build-helpers.git']
                        ]
                    ]
                )
            }
        }

        stage('sources') {
                steps {
                    dir("work") {
                    checkout(
                        changelog: true,
                        poll: true,
                        scm: [
                            $class: 'GitSCM',
                            branches: [[name: 'master']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [
                                [ $class: 'CleanCheckout'],
                                [ $class: 'RelativeTargetDirectory',
                                    relativeTargetDir: 'poky'
                                ],
                                [ $class: 'CheckoutOption',
                                    timeout: 30
                                ],
                                [ $class: 'CloneOption',
                                    depth: 0,
                                    noTags: false,
                                    reference: '',
                                    shallow: false,
                                    timeout: 45,
                                ]
                            ],
                            submoduleCfg: [],
                            userRemoteConfigs: [
                                [url: 'https://git.yoctoproject.org/poky']
                            ]
                        ]
                    )
                    checkout(
                        changelog: true,
                        poll: true,
                        scm: [
                            $class: 'GitSCM',
                            branches: [[name: 'master']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [
                                [ $class: 'CleanCheckout'],
                                [ $class: 'RelativeTargetDirectory',
                                    relativeTargetDir: 'meta-arm'
                                ],
                                [ $class: 'CheckoutOption',
                                    timeout: 30
                                ],
                                [ $class: 'CloneOption',
                                    depth: 0,
                                    noTags: false,
                                    reference: '',
                                    shallow: false,
                                    timeout: 45,
                                ]
                            ],
                            submoduleCfg: [],
                            userRemoteConfigs: [
                                [url: 'https://git.yoctoproject.org/meta-arm']
                            ]
                        ]
                    )
                    checkout(
                        changelog: true,
                        poll: true,
                        scm: [
                            $class: 'GitSCM',
                            branches: [[name: 'master']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [
                                [ $class: 'CleanCheckout'],
                                [ $class: 'RelativeTargetDirectory',
                                    relativeTargetDir: 'meta-openembedded'
                                ],
                                [ $class: 'CheckoutOption',
                                    timeout: 30
                                ],
                                [ $class: 'CloneOption',
                                    depth: 0,
                                    noTags: false,
                                    reference: '',
                                    shallow: false,
                                    timeout: 45,
                                ]
                            ],
                            submoduleCfg: [],
                            userRemoteConfigs: [
                                [url: 'https://git.openembedded.org/meta-openembedded']
                            ]
                        ]
                    )
                    checkout(
                        changelog: true,
                        poll: true,
                        scm: [
                            $class: 'GitSCM',
                            branches: [[name: 'main']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [
                                [ $class: 'CleanCheckout'],
                                [ $class: 'RelativeTargetDirectory',
                                    relativeTargetDir: 'meta-staging'
                                ],
                                [ $class: 'CheckoutOption',
                                    timeout: 30
                                ],
                                [ $class: 'CloneOption',
                                    depth: 0,
                                    noTags: false,
                                    reference: '',
                                    shallow: false,
                                    timeout: 45,
                                ]
                            ],
                            submoduleCfg: [],
                            userRemoteConfigs: [
                                [url: 'https://github.com/xroumegue/meta-staging']
                            ]
                        ]
                    )
                }
            }
        }

        stage("changes") {
            steps {
                dir("helpers") {
                    lastChanges since: 'LAST_SUCCESSFUL_BUILD', format:'SIDE',matching: 'LINE'
                }
                dir("work/poky") {
                    lastChanges since: 'LAST_SUCCESSFUL_BUILD', format:'SIDE',matching: 'LINE'
                }
                dir("work/meta-arm") {
                    lastChanges since: 'LAST_SUCCESSFUL_BUILD', format:'SIDE',matching: 'LINE'
                }
                dir("work/meta-openembedded") {
                    lastChanges since: 'LAST_SUCCESSFUL_BUILD', format:'SIDE',matching: 'LINE'
                }
                dir("work/meta-staging") {
                    lastChanges since: 'LAST_SUCCESSFUL_BUILD', format:'SIDE',matching: 'LINE'
                }
            }
        }

        stage('Setup') {
            steps {
                dir("work") {
                    sh '''cp ${WORKSPACE}/helpers/etc/env-default.sh.sample ${WORKSPACE}/helpers/etc/env-default.sh'''
                    sh '''sed -i -e "s#sstatedir_default=#sstatedir_default=$SSTATE_DIR#"  ${WORKSPACE}/helpers/etc/env-default.sh'''
                    sh '''sed -i -e "s#downloaddir_default=#downloaddir_default=$DL_DIR#"  ${WORKSPACE}/helpers/etc/env-default.sh'''
                    sh '''${WORKSPACE}/helpers/yocto/yocto-build.sh --force setup'''
                }
            }
        }

        stage('build') {
            steps {
                dir("work") {
                    sh '''${WORKSPACE}/helpers/yocto/yocto-build.sh build'''
                }
            }
        }

        stage('sdk') {
            steps {
                dir("work") {
                    sh '''${WORKSPACE}/helpers/yocto/yocto-build.sh sdk'''
                }
            }
        }
    }
}